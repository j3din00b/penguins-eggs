# Nome del workflow, specifico per Fedora
name: Build and Publish Fedora RPM

# Controllo per evitare che piÃ¹ workflow scrivano contemporaneamente su gh-pages
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  # --- JOB 1: COSTRUISCE IL PACCHETTO PER FEDORA ---
  build-fedora:
    runs-on: ubuntu-latest
    container:
      image: fedora:42
    steps:
      - name: 1. Checkout repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 2. Get Package Version
        id: version
        run: echo "version=$(grep -m 1 '^Version:' packaging/rpm/penguins-eggs.spec | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: 3. Install Build Dependencies
        run: |
          dnf install -y 'dnf-plugins-core' rpm-build git tar gzip curl gnupg2
          echo "Installing build dependencies from spec file..."
          for package in $(grep '^BuildRequires:' packaging/rpm/penguins-eggs.spec | awk '{print $2}'); do
            echo "Installing $package..."
            dnf install -y "$package"
          done

      - name: 4. Import GPG Key
        run: |
          echo "${{ secrets.GPG_SIGNING_KEY }}" | gpg --import
          echo '%_signature gpg' > ~/.rpmmacros
          echo '%_gpg_name ${{ secrets.GPG_KEY_ID }}' >> ~/.rpmmacros

      - name: 5. Prepare RPM Sources
        run: |
          mkdir -p $HOME/rpmbuild/SOURCES
          tar -czf $HOME/rpmbuild/SOURCES/penguins-eggs.tar.gz \
            --transform='s,^\.,penguins-eggs-${{ steps.version.outputs.version }},' \
            --exclude=.git --exclude=.github .
          curl -LO https://github.com/pieroproietti/penguins-bootloaders/releases/download/v25.9.8/bootloaders.tar.gz
          cp bootloaders.tar.gz $HOME/rpmbuild/SOURCES/

      - name: 6. Build and Sign RPM package
        id: build
        run: |
          eval $(gpg-agent --daemon)
          echo "${{ secrets.GPG_PASSPHRASE }}" | /usr/bin/gpg --batch --yes --passphrase-fd 0 --pinentry-mode loopback -o /dev/null -s /dev/null
          rpmbuild -ba --sign packaging/rpm/penguins-eggs.spec
          echo "rpm_path=$(find $HOME/rpmbuild/RPMS -name '*.rpm')" >> $GITHUB_OUTPUT

      - name: 7. Upload RPM Artifact for publishing
        uses: actions/upload-artifact@v4
        with:
          name: fedora-42-rpm-for-repo
          path: ${{ steps.build.outputs.rpm_path }}

  # --- JOB 2: PUBBLICA SUL REPOSITORY (DOPO IL BUILD) ---
  publish-repo:
    needs: build-fedora
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: 1. Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          
      - name: 2. Download Fedora RPM artifact
        run: mkdir -p rpm/fedora/42
        uses: actions/download-artifact@v4
        with:
          name: fedora-42-rpm-for-repo
          path: ./rpm/fedora/42

      - name: 3. Install Tools and Import GPG Key
        run: |
          sudo apt-get update && sudo apt-get install -y createrepo-c gnupg2
          echo "${{ secrets.GPG_SIGNING_KEY }}" | gpg --import

      - name: 4. Update and Sign Repository for Fedora 42
        run: |
          # Spostiamo tutti i file .rpm dalla sottocartella creata da download-artifact
          find ./rpm/fedora/42 -name "*.rpm" -exec mv -t ./rpm/fedora/42/ {} +
          
          # Entriamo nella cartella specifica e aggiorniamo solo quel repository
          cd ./rpm/fedora/42
          createrepo_c .
          
          # Firmiamo i nuovi metadati
          eval $(gpg-agent --daemon)
          echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --batch --yes --passphrase-fd 0 --pinentry-mode loopback --detach-sign --armor -u ${{ secrets.GPG_KEY_ID }} repodata/repomd.xml

      - name: 5. Commit and Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Pubblichiamo l'intero contenuto del branch, che ora e' aggiornato
          publish_dir: .
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
