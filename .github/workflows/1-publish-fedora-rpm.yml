# Nome del workflow, specifico per Fedora
name: 1 Build and Publish Fedora RPM

# Controllo per evitare che piÃ¹ workflow scrivano contemporaneamente su gh-pages
concurrency:
  group: gh-pages-rpm-deploy
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  # --- JOB 1: COSTRUISCE IL PACCHETTO PER FEDORA ---
  build-fedora:
    runs-on: ubuntu-latest
    container:
      image: fedora:42
    steps:
      - name: 1. Checkout repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 2. Get Package Version
        id: version
        run: |
          echo "version=$(grep -m 1 '^Version:' packaging/rpm/penguins-eggs.spec | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: 3. Install Build Dependencies
        run: |
          dnf install -y 'dnf-plugins-core' rpm-build git tar gzip curl
          echo "Installing build dependencies from spec file..."
          for package in $(grep '^BuildRequires:' packaging/rpm/penguins-eggs.spec | awk '{print $2}'); do
            echo "Installing $package..."
            dnf install -y "$package"
          done

      - name: 4. Prepare RPM Sources
        run: |
          mkdir -p $HOME/rpmbuild/SOURCES
          tar -czf $HOME/rpmbuild/SOURCES/penguins-eggs.tar.gz \
            --transform='s,^\.,penguins-eggs-${{ steps.version.outputs.version }},' \
            --exclude=.git --exclude=.github .
          curl -LO https://github.com/pieroproietti/penguins-bootloaders/releases/download/v25.9.8/bootloaders.tar.gz
          cp bootloaders.tar.gz $HOME/rpmbuild/SOURCES/

      - name: 5. Build RPM package
        id: build
        run: |
          rpmbuild -ba packaging/rpm/penguins-eggs.spec
          echo "rpm_path=$(find $HOME/rpmbuild/RPMS -name '*.rpm')" >> $GITHUB_OUTPUT

      - name: 6. Upload RPM Artifact
        uses: actions/upload-artifact@v4
        with:
          name: fedora-rpm
          path: ${{ steps.build.outputs.rpm_path }}

  # --- JOB 2: PUBBLICA SUL REPOSITORY (DOPO IL BUILD) ---
  publish-repo:
    needs: build-fedora
    runs-on: ubuntu-latest
    steps:
      - name: 1. Download Fedora RPM artifact
        uses: actions/download-artifact@v4
        with:
          name: fedora-rpm
          path: rpm-repo/fedora

      - name: 2. Install createrepo tool
        run: sudo apt-get update && sudo apt-get install -y createrepo-c

      - name: 3. Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          # Specifichiamo una cartella di lavoro per l'azione
          workdir: ./rpm-repo
          # L'azione eseguira' questo script DOPO aver fatto il checkout di gh-pages
          # e aver copiato i nuovi file.
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Update Fedora RPM repository'
          full_commit_message: 'Update Fedora RPM repository'
          publish_dir: ./rpm-repo
          destination_dir: rpm
          keep_files: true
          # Script per aggiornare i metadati
          # L'azione si trovera' gia' nella cartella 'rpm' del branch gh-pages
          # quando eseguira' questo script.
          # createrepo_c .
